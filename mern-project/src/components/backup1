//listing from eventbrite

import React, { Component } from 'react';
import axios from 'axios';
require('dotenv').config()

export default class SearchEvents extends Component {

    constructor(props) {
      super(props);
      this.state = {
        // error: null,
        // isLoaded: false,
        items: []
      };
    }
  
    componentDidMount() {
        axios.get('https://www.eventbriteapi.com/v3/events/search/?location.address=San+Francisco&start_date.keyword=today&q=music&token=OWAG6MCGXLZJ5PZDGWM5')
            .then(response => {
                console.log(response.data.events);
                this.setState({
                    items: response.data.events
                })
            })
            .catch(error => {
                console.log(error);
        })
        //https://jsonplaceholder.typicode.com/users
        //http://api.eventful.com/json/events/search?location=San+Francisco&date=Next+Week
        //https://www.eventbriteapi.com/v3/events/search/?location.address=San+Francisco&start_date.keyword=today&q=music&token=OWAG6MCGXLZJ5PZDGWM5
    //   fetch("https://www.eventbriteapi.com/v3/events/search/?location.address=San+Francisco&start_date.keyword=today&q=music&token=OWAG6MCGXLZJ5PZDGWM5")
    //     .then(res => res.json())
    //     //.then(json => console.log(json))
    //     .then(
    //       (result) => {
    //         this.setState({
    //           isLoaded: true,
    //           items: result.events
    //         });
    //       },
    //       (error) => {
    //         this.setState({
    //           isLoaded: true,
    //           error
    //         });
    //       }
    //     )
    }
    
    

    render() {
        
        const { items} = this.state;
        console.log(`*****${items}`);
        // if (!isLoaded){
        //     return <div>Loading ...</div>;
        // } else {
            return (
                <div>
                <h3>Search for events:</h3>
                <form onSubmit={this.onSubmit}>
                <div className="form-group"> 
                    
                    <input  type="text"
                        required
                        className="form-control"
                        value={this.state.username}
                        onChange={this.onChangeUsername}
                        />
                </div>
                <div className="form-group">
                    <input type="submit" value="Search now" className="btn btn-primary" />
                </div>
                </form>
                <h1>Events today in SF: </h1>
                <ul>
                    {items.map(result => (
                        <li key={result.id}>
                            {result.name.text}
                        </li>
                    ))}
                </ul>

                
                    
                </div>
            )
        }
        
      }
    //}

    // GET by id
router.route('/:id').get((req, res) => {
  Event.findById(req.params.id)
    .then(event => res.json(event))
    .catch(err => res.status(400).json('Error: ' + err));
});

// DELETE
router.route('/:id').delete((req, res) => {
  Event.findByIdAndDelete(req.params.id)
    .then(() => res.json('Event deleted.'))
    .catch(err => res.status(400).json('Error: ' + err));
});

// PUT update
router.route('/update/:id').post((req, res) => {
  Event.findById(req.params.id)
    .then(event => {
      event.eventname = req.body.username;
      

      event.save()
        .then(() => res.json('Event updated!'))
        .catch(err => res.status(400).json('Error: ' + err));
    })
    .catch(err => res.status(400).json('Error: ' + err));
});
  
this.deleteEvent = this.deleteEvent.bind(this);

deleteEvent(id) {
        axios.delete('http://localhost:5000/events/'+id)
          .then(res => console.log(res.data));
        this.setState({
          events: this.state.events.filter(el => el._id !== id)
        })
    }
  